# https://youtu.be/NQe61K7PITc
# code écrit pour piloter un charger chinois de voiture elec https://fr.aliexpress.com/item/1005005504929776.html?spm=a2g0o.order_list.order_list_main.41.121e5e5bxzzMkQ&gatewayAdapt=glo2fra

# ==============================================================================
# Paramètres de Configuration - À Adapter Selon Votre Installation
# ==============================================================================

# Remplacez les entités ci-dessous par celles correspondant à votre installation a l'aide de CTL-F > Remplacer TExt par autre text

#####sensors:
# sensor.fl995hk_batterie                       # Niveau de batterie de la Zoé
# sensor.chargeurvoiture_status                 # Statut du chargeur de la voiture
# sensor.combined_power_pylontech_voltronic     # Puissance solaire disponible
# sensor.combined_battery_soc                   # État de charge de la batterie maison
# sensor.linky_relais                           # Statut du relais Linky (heures creuses)
# sensor.voltronic_1_batt_battery               # Niveau de charge de la batterie maison

#####Entités de Sélection
# select_chargeur_toggle:
# entity_id: select.chargeurvoiture_toggle_charging   # Sélecteur pour démarrer/arrêter la charge
# - "Start charging"
# - "Stop charging"

#parametre onduleur pour passer GRID ou BATTERIE:
# select.voltronic_1_param01               # Sélecteur pour changer le mode
# options du mod
#    - "UTI"  # GRID
#    - "SBU"  # Batterie

# Commande le bouton de l'ampérage de charge de la borne via le bouton "virtuel" à travers le script .
- id: sync_charge_current_with_virtual
  alias: "Sync Charge Current with Virtual"
  trigger:
    - platform: state
      entity_id: input_number.chargeurvoiture_set_chargevirtuel_current
  condition: []
  action:
    - service: script.adjust_charge_current
      data:
        target_value: "{{ trigger.to_state.state | float }}"






# Automatisation pour la gestion de la charge de la voiture électrique 
- id: Gestion_de_la_charge_Zoe
  alias: "Gestion de la charge voiture électrique"
  trigger:
    # Déclencheurs pour tous les modes (se déclenche lorsque l'un des états change)
    - platform: state
      entity_id:
        - sensor.fl995hk_batterie
        - input_number.zoe_coupure_pourcentage
        - sensor.chargeurvoiture_status
        - input_select.SelecteurChargeurVE
        - sensor.combined_power_pylontech_voltronic
        - sensor.combined_battery_soc
        - number.chargeurvoiture_set_charge_current

  condition: []
  action:
    - choose:
        ################### Mode "On No Limits" : Démarrage immédiat de la charge, sans aucune réserve ###################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'On No Limits') }}"
          sequence:
            # Démarre la charge de la Zoé
            - service: select.select_option
              data:
                entity_id: select.chargeurvoiture_toggle_charging
                option: "Start charging"

        ################## Mode "On Limited" : Démarrage de la charge et arrêt en fonction du pourcentage de la batterie ##################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'On Limited') }}"
          sequence:
            - choose:
                # Démarrer la charge si la batterie de la Zoé est sous le seuil défini
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float < states('input_number.zoe_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    # Démarrer la charge
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
            - choose:
                # Si la batterie de la Zoé dépasse le seuil défini, arrêter la charge
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float >= states('input_number.zoe_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    # Arrêter la charge

                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"

        ################### Mode "Heures-Creuses" : Gestion pendant les heures creuses ###################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Heures-Creuses') }}"
          sequence:
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '1' }}"  # Vérifie que c'est les heures creuses
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.voltronic_1_param01
                        option: "UTI"  # Passer en mode UTI (GRID)
                    - delay:
                        seconds: 30  # Attendre 30 secondes après avoir passé en mode UTI

            - choose:
                # Démarrer la charge pendant les heures creuses
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '1' }}"
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float < states('input_number.zoe_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"

                # Arrêter la charge si la batterie est au-dessus du seuil
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '1' }}"
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float >= states('input_number.zoe_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"

                # Arrêter la charge pendant les heures pleines
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '0' }}"  # Heures pleines
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"
                    - delay:
                        seconds: 10

                    # l'onduleur Passer en mode SBU (mode baterrie) si la batterie de la maison est supérieure à 40%
                    - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ states('sensor.voltronic_1_batt_battery') | float > 40 }}"
                          sequence:
                            - delay:
                                seconds: 30  # Attendre 30 secondes avant de passer en mode SBU
                            - service: select.select_option
                              data:
                                entity_id: select.voltronic_1_param01
                                option: "SBU"  # Passer en mode SBU (batterie)

            # Arrêter la charge en dehors des heures creuses
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '0' }}"  # Vérifie que ce ne sont pas les heures creuses
                    - condition: state
                      entity_id: sensor.chargeurvoiture_status
                      state: ['Charging', 'Connected']
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"

        ##################### Mode "Solaire" : Gestion basée sur la production solaire ##############################################################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Solar') }}" #vérifi si le bouton est sur solaire
            - condition: numeric_state
              entity_id: sensor.combined_battery_soc
              above: 30  #verifi le % batterie
            - condition: template
              value_template: "{{ is_state('sensor.voltronic_1_mode_info', 'solaire') }}"  # Vérifie si l'onduleur est en mode "solaire" et pas Grid


          sequence:
            - choose:
                # Vérifier si la production solaire est suffisante pour démarrer la charge
                - conditions:
                    - condition: numeric_state
                      entity_id: sensor.combined_power_pylontech_voltronic
                      above: 0  # Vérifie si la production solaire est sufisante pour demarer la charge
                 #   - condition: template
                  #    value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    # Démarrer la charge
                    - service: input_number.set_value
                      data:
                        entity_id: input_number.chargeurvoiture_set_chargevirtuel_current
                        value: 8
                    - delay: "00:00:10"  # Ajoute un timer de 10 secondes , laisse le temps au chargeur de changer la valeur
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
                    - service: persistent_notification.create
                      data:
                        message: "la charge solaire a commencé"
                        title: "charge solaire"
                        notification_id: "borne_solar_start"
                    - delay: "00:00:20"  # Ajoute un timer pour laisser le temps a la charge de commencer


            # ---------------Boucle pour ajuster le courant de charge en fonction de la puissance solaire-----------------------------------------------------
            - repeat:
                while:
                  - condition: and
                    conditions:
                      - condition: state
                        entity_id: sensor.chargeurvoiture_status
                        state: 'Charging'  # Tant que la voiture est en charge

                sequence:

                  # Vérifier si la batterie est à 50 % ou plus
                  - choose:
                      - conditions:
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            below: 30  # Si la batterie tombe en dessous de 50 %
                        sequence:
                          - service: select.select_option
                            data:
                              entity_id: select.chargeurvoiture_toggle_charging
                              option: "Stop charging"
                          - service: persistent_notification.create
                            data:
                              message: "La charge de la voiture a été arrêtée car la batterie Maison est en dessous de 50 %."
                              title: "Arrêt de la charge de la voiture"
                              notification_id: "voiture_charge_batterie_basse"
                              
                     # Vérifier si le bouton est toujours sur solar       
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ not is_state('input_select.SelecteurChargeurVE', 'Solar') }}"
                        sequence:
                          - service: persistent_notification.create
                            data:
                              message: "Le mode solaire a été quité."
                              title: "changemnet de mode detecté"
                              notification_id: "mode_chargeur_changé"

                  # Vérifier si le statut du chargeur est 'error' et envoyer une notification 
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: sensor.chargeurvoiture_status
                            state: 'error'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              message: "Borne de recharge en erreur"
                              title: "Erreur de la borne de recharge"
                              notification_id: "borne_recharge_erreur"


                  # Attend un changement de la puissance solaire
                  - wait_for_trigger:
                      - platform: state
                        entity_id: sensor.combined_power_pylontech_voltronic
                  # Définition des variables locales
                  - variables:
                      power: "{{ states('sensor.combined_power_pylontech_voltronic') | float }}"
                      current: "{{ states('number.chargeurvoiture_set_charge_current') | float }}"
                  - choose:

                      # Si la puissance est insuffisante 
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float < -5 }}"
                        sequence:
                          - choose:
                          
                              # Si la puissance est inférieure à -21, diminuer le courant de 3A et si le courant est superieur a 11amp
                              - conditions:
                                  - condition: template
                                    value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float < -21 }}"
                                  - condition: template
                                    value_template: "{{ current > 10 }}" # ont ne veut pas reduire de 3A si nous sommes a 9A
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current - 3 }}"
                                      
                              # Si la puissance est entre -20 et -5, diminuer le courant de 1A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= -20 and states('sensor.combined_power_pylontech_voltronic') | float < -5 }}"
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current - 1 }}"

                              # Si le courant est déjà à 8A, on entre dans une nouvelle boucle
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current == 8 }}"
                                sequence:
                                  - repeat:
                                      while:
                                        - condition: or
                                          conditions:
                                            - condition: numeric_state
                                              entity_id: sensor.combined_power_pylontech_voltronic
                                              below: -20
                                      sequence:
                                        - delay: "00:00:15"
                                        - choose:
                                            # Si la puissance est toujours inférieure à X apres 10secs, arrêter la charge
                                            - conditions:
                                                - condition: numeric_state
                                                  entity_id: sensor.combined_power_pylontech_voltronic
                                                  below: -20
                                              sequence:
                                                - service: select.select_option
                                                  data:
                                                    entity_id: select.chargeurvoiture_toggle_charging
                                                    option: "Stop charging"
                                                - service: persistent_notification.create
                                                  data:
                                                    message: "La charge de la voiture a été arrêtée au moins 5 minutes en raison d'une production solaire insuffisante."
                                                    title: "Arrêt de la charge de la voiture"
                                                    notification_id: "voiture_charge_arret"
                                                - delay: "00:01:00"

                      # Si la puissance est supérieure ou égale à 10 A et que la baterrie est sous les 98%
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= 10 }}"
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            below: 98  #verifi le % batterie
                        sequence:
                          - choose:
                              # Si le courant est inférieur à 32A, on l'augmente de 5A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current < 32 }}"
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current + 1 }}"
                                      
                      # Si la puissance est supérieure ou égale à -10A et que la baterrie est au dessus de 98%
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= -10 }}"
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            above: 97  #verifi le % batterie
                        sequence:
                          - choose:
                              # Si le courant est inférieur à 32A, on l'augmente de 5A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current < 32 }}"
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current + 1 }}"


            #---------------fin de la boucle-----------------------------------------------------------------------------------------------

  


        ###################### Mode "Off" : Arrêt de la charge même si quelqu'un se branche ##################################################################################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Off') }}"
          sequence:
            - choose:
                # Si la voiture est en charge, on arrête la charge
                - conditions:
                    - condition: state
                      entity_id: sensor.chargeurvoiture_status
                      state: ['Charging', 'Connected']
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"

  mode: single  # Empêche l'automatisation de s'exécuter en parallèle
