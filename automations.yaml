# https://youtu.be/NQe61K7PITc
# code écrit pour piloter un charger chinois de voiture elec https://fr.aliexpress.com/item/1005005504929776.html?spm=a2g0o.order_list.order_list_main.41.121e5e5bxzzMkQ&gatewayAdapt=glo2fra
# Pilote aussi un onduleur pour panneaux solaire de marque WKS sur bas voltronic, avec un addon homeassistant smartphoton

# ==============================================================================
# Paramètres de Configuration - À Adapter Selon Votre Installation
# ==============================================================================

# Remplacez les entités ci-dessous par celles correspondant à votre installation a l'aide de CTL-F > Remplacer TExt par autre text

#####sensors:
# sensor.fl995hk_batterie                       # Niveau de batterie de la voiture
# sensor.chargeurvoiture_status                 # Statut du chargeur de la borne de charge
# sensor.combined_power_pylontech_voltronic     # Amperage de charge ou décharge de la batterie maison
# sensor.combined_battery_soc                   # État de charge de la batterie maison
# sensor.linky_relais                           # Statut du relais Linky  pour déclancher les heures creuses
# sensor.pince_amp_onduleur_power_a             # puissance soutiré a l'onduleur en watt je limite le conso a 8000w

#####Entités de Sélection
# select_chargeur_toggle:
# entity_id: select.chargeurvoiture_toggle_charging   # Sélecteur pour démarrer/arrêter la charge
# - "Start charging"
# - "Stop charging"

#parametre onduleur pour passer GRID ou BATTERIE:
# select.voltronic_1_param01               # Sélecteur pour changer le mode reseau ou solaire de votre onduleur
# options du mod
#    - "UTI"  # GRID/reseau
#    - "SBU"  # Batterie maison

# Commande le bouton de l'ampérage de charge de la borne lentement  via le bouton "virtuel" à travers le script "adjust_charge_current" .
- id: sync_charge_current_with_virtual
  alias: "Sync Charge Current with Virtual"
  trigger:
    - platform: state
      entity_id: input_number.chargeurvoiture_set_chargevirtuel_current
  condition: []
  action:
    - service: script.adjust_charge_current
      data:
        target_value: "{{ trigger.to_state.state | float }}"

# reste l'interupteur a 00h00 pour le message journalier de "la charge solaire a commencé"
- id: reste_inter_message
  alias: Réinitialiser le message de charge solaire
  trigger:
    - platform: time
      at: "00:00:00"  # Se déclenche chaque jour à minuit
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.message_envoye_aujourdhui





##################################################################################################
################################  debut du code de charge   ######################################
##################################################################################################


# Automatisation pour la gestion de la charge de la voiture électrique 
- id: Gestion_de_la_charge_ve
  alias: "Gestion de la charge voiture électrique"
  trigger:
    # Déclencheurs pour tous les modes (se déclenche lorsque l'un des états change)
    - platform: state
      entity_id:
        - sensor.fl995hk_batterie
        - input_number.ve_coupure_pourcentage
        - sensor.chargeurvoiture_status
        - input_select.SelecteurChargeurVE
        - sensor.combined_power_pylontech_voltronic
        - sensor.combined_battery_soc
        - number.chargeurvoiture_set_charge_current
        - sensor.pince_amp_onduleur_power_a

  condition: []
  action:
    - choose:
    
################### Mode "Si déconnecté et sélecteur pas deja sur Off, passer automatiquement en mode Solar" ###################
        - conditions:
            - condition: state
              entity_id: sensor.chargeurvoiture_status
              state: "available"  # Vérifie si la voiture est déconnectée
            - condition: template
              value_template: "{{ not is_state('input_select.SelecteurChargeurVE', 'Off') }}"  # Vérifie que le sélecteur n'est pas sur "Off"
          sequence:
            # Passe le bouton de sélection en mode "Solar"
            - service: input_select.select_option
              data:
                entity_id: input_select.SelecteurChargeurVE
                option: "Solar"
                
                
################### Mode "On No Limits" : Démarrage immédiat de la charge, sans aucune réserve ###################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'On No Limits') }}"
            - condition: template
              value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'available') }}" #si le status est autre que available
          sequence:
            # Démarre la charge de la Zoé
            - service: select.select_option
              data:
                entity_id: select.chargeurvoiture_toggle_charging
                option: "Start charging"


################## Mode "On Limited" : Démarrage de la charge et arrêt en fonction du pourcentage de la batterie ##################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'On Limited') }}"
            - condition: template
              value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'available') }}" #si le status est autre que available
          sequence:
            - choose:
                # Démarrer la charge si la batterie de la Zoé est sous le seuil défini
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float < states('input_number.ve_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    # Démarrer la charge
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
            - choose:
                # Si la batterie de la Zoé dépasse le seuil défini, arrêter la charge
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float >= states('input_number.ve_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    # Arrêter la charge
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"
                    #repasse en mode solaire pour le prochain branchement
                    - service: select.select_option
                      data:
                        entity_id: input_select.SelecteurChargeurVE
                        option: "Solar"

################### Mode "Heures-Creuses" : démarre la charge en heures creuses, bascule l'onduleur de batterie à réseau, stoppe en fonction du % voiture ###################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Heures-Creuses') }}"
            - condition: template
              value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'available') }}" #si le status est autre que available
          sequence:
            - choose:
                # Vérifie que c'est les heures creuses et passe l'onduleur en mode UTI
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '1' }}"  # Vérifie que c'est les heures creuses
                    - condition: template
                      value_template: "{{ is_state('sensor.voltronic_1_mode_info', 'solaire') }}"  # Vérifie que l'onduleur est sur le mode solaire
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.voltronic_1_param01
                        option: "UTI"  # Passer en mode UTI (GRID)
                    - delay: "00:01:00"  # 
        
                # Démarrer la charge pendant les heures creuses
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '1' }}"   # Peut être remplacé par des horaires
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float < states('input_number.ve_coupure_pourcentage') | float }}" # vérifi que le % de charge n'est pas attend
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'charged') }}"  #la voiture est brnaché et attendre d'etre chargée
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
        
                # Arrêter la charge si la batterie est au-dessus du seuil % défini par le bouton
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.fl995hk_batterie') | float >= states('input_number.ve_coupure_pourcentage') | float }}"
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"
                    - delay : "00:00:30"
                        
                    # L'onduleur repasser en mode SBU (mode batterie) si la batterie de la maison est supérieure à 40%
                    - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ states('sensor.combined_battery_soc') | float > 30 }}"
                          sequence:
                            - service: select.select_option
                              data:
                                entity_id: select.voltronic_1_param01
                                option: "SBU"  # Passer en mode SBU (batterie)
        
                # Arrêter la charge pendant les heures pleines
                - conditions:
                    - condition: template
                      value_template: "{{ states('sensor.linky_relais') == '0' }}"  # Heures pleines
                    - condition: template
                      value_template: "{{ is_state('sensor.chargeurvoiture_status', 'Charging') }}"
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "start charging"
                    - delay: "00:00:05"
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"
                    - delay: "00:00:30"
 
        
                    # L'onduleur repasser en mode SBU (mode batterie) si la batterie de la maison est supérieure à 40%
                    - choose:
                        - conditions:
                            - condition: template
                              value_template: "{{ states('sensor.combined_battery_soc') | float > 30 }}"
                          sequence:
                            - service: select.select_option
                              data:
                                entity_id: select.voltronic_1_param01
                                option: "SBU"  # Passer en mode SBU (batterie)


################### Mode "Solaire" : Gestion basée sur la production solaire, la voiture ne charge qu'avec le surplus solaire ##############################################################
        - conditions:
            #vérifi si le bouton est sur solaire
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Solar') }}" 
              
              #si le status est autre que available
            - condition: template
              value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'available') }}" 
              
            # regarde a partir de quel % batterie maison  la charge de la voiture doit commencer  
            - condition: template
              value_template: "{{ states('sensor.combined_battery_soc') | float > states('input_number.ve_demarage_solaire') | float }}" 
              
            # Vérifie si l'onduleur est en mode "solaire" et pas reseau (Grid)  
            - condition: template
              value_template: "{{ is_state('sensor.voltronic_1_mode_info', 'solaire') }}"  


          sequence:
            - choose:
                # Vérifier si la production solaire est suffisante pour démarrer la charge
                - conditions:
                    - condition: numeric_state
                      entity_id: sensor.combined_power_pylontech_voltronic
                      above: -2  # Vérifie si la production solaire est sufisante pour demarer la charge
                    - condition: template
                      value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Solar') }}" # Tant que le bouton est sur solar
                  sequence:
                    # Démarrer la charge
                    - service: input_number.set_value
                      data:
                        entity_id: input_number.chargeurvoiture_set_chargevirtuel_current #passe l'amperage de charge a 8 pour démarer petit
                        value: 8
                    - delay: "00:00:20"  # Ajoute un timer , laisse le temps au chargeur de changer la valeur Amp
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
                    - delay: "00:00:20"  # Ajoute un timer pour laisser le temps a la charge de commencer
                    
                    - choose: # Condition pour un  message uniquement /jour
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.message_envoye_aujourdhui
                            state: "off"  # Vérifie si le message n'a pas encore été envoyé aujourd'hui
                        sequence:
                          - service: persistent_notification.create
                            data:
                              message: "la charge solaire a commencé"
                              title: "charge solaire"
                              notification_id: "borne_solar_start"
                          - service: input_boolean.turn_on  # Met à jour l'input_boolean pour indiquer que le message a été envoyé aujourd'hui
                            target:
                              entity_id: input_boolean.message_envoye_aujourdhui

                    
                    
            # ---------------Boucle pour ajuster le courant de charge en fonction de la puissance solaire-----------------------
            - repeat:
                while:
                  - condition: and
                    conditions:
                      - condition: state
                        entity_id: sensor.chargeurvoiture_status
                        state: 'Charging'  # Tant que la voiture est en charge
                      - condition: template
                        value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Solar') }}" # Tant que le bouton est sur solar

                sequence:

                  # Vérifier si la batterie maison au dessus de 30%
                  - choose:
                      - conditions:
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            below: 30  # Si la batterie maison tombe en dessous de X
                        sequence:
                          - service: select.select_option
                            data:
                              entity_id: select.chargeurvoiture_toggle_charging
                              option: "Stop charging"
                          - service: persistent_notification.create
                            data:
                              message: "La charge de la voiture a été arrêtée car la batterie Maison est Faible."
                              title: "Arrêt de la charge de la voiture"
                              notification_id: "voiture_charge_batterie_basse"
                              


                  # Vérifier si le statut du chargeur est 'error' et envoyer une notification 
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: sensor.chargeurvoiture_status
                            state: 'error'
                        sequence:
                          - service: persistent_notification.create
                            data:
                              message: "Borne de recharge en erreur"
                              title: "Erreur de la borne de recharge"
                              notification_id: "borne_recharge_erreur"


                  # Attend un changement de la puissance solaire
                  - wait_for_trigger:
                      - platform: state
                        entity_id: sensor.combined_power_pylontech_voltronic
                  # Définition des variables locales
                  - variables:
                      power: "{{ states('sensor.combined_power_pylontech_voltronic') | float }}"
                      current: "{{ states('number.chargeurvoiture_set_charge_current') | float }}"
                  - choose:
                  
                  
                      # Si la puissance de l'onduleur est supérieure à 8000w, diminuer le courant de 3A
                      - conditions:
                          - condition: numeric_state
                            entity_id: sensor.pince_amp_onduleur_power_a
                            above: 9500
                        sequence:
                          - service: number.set_value
                            data:
                              entity_id: number.chargeurvoiture_set_charge_current
                              value: "{{ current - 3 }}"
                          - delay: "00:00:07"

                      # Si la puissance est insuffisante 
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float < -5 }}"
                        sequence:
                          - choose:

                                  # Vérifier si le bouton est toujours sur solar      
                              - conditions:
                                  - condition: template
                                    value_template: "{{ not is_state('input_select.SelecteurChargeurVE', 'Solar') }}"
                                sequence:
                                  - service: persistent_notification.create
                                    data:
                                      message: "Le mode solaire a été quité."
                                      title: "changemnet de mode detecté"
                                      notification_id: "mode_chargeur_changé"
                          
                              # Si la puissance est inférieure à -21, diminuer le courant de 3A et si le courant est superieur a 11amp
                              - conditions:
                                  - condition: template
                                    value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float < -21 }}"
                                  - condition: template
                                    value_template: "{{ current > 10 }}" # ont ne veut pas reduire de 3A si nous sommes a 9A
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current - 3 }}"
                                      
                              # Si la puissance est entre -20 et -5, diminuer le courant de 1A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= -20 and states('sensor.combined_power_pylontech_voltronic') | float < -6 }}"
                                sequence:
                                  - delay: "00:00:10"
                                  - condition: template
                                    value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= -20 and states('sensor.combined_power_pylontech_voltronic') | float < -6 }}"
                                  - variables:
                                      current: "{{ states('number.chargeurvoiture_set_charge_current') | float }}"
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current - 1 }}"


                              # Si le courant est déjà à 8A, on entre dans une nouvelle boucle
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current <= 8 }}"
                                sequence:
                                  - repeat:
                                      while:
                                        - condition: or
                                          conditions:
                                            - condition: numeric_state
                                              entity_id: sensor.combined_power_pylontech_voltronic
                                              below: -8
                                      sequence:
                                        - delay: "00:00:30"
                                        - choose:
                                            # Si la puissance est toujours inférieure à X Amp apres X secs, arrêter la charge
                                            - conditions:
                                                - condition: numeric_state
                                                  entity_id: sensor.combined_power_pylontech_voltronic
                                                  below: -8
                                              sequence:
                                                - service: select.select_option
                                                  data:
                                                    entity_id: select.chargeurvoiture_toggle_charging
                                                    option: "Stop charging"
                                                - service: persistent_notification.create
                                                  data:
                                                    message: "La charge de la voiture a été arrêtée  en raison d'une production solaire insuffisante."
                                                    title: "Arrêt de la charge de la voiture"
                                                    notification_id: "voiture_charge_arret"
                                                - delay: "00:01:00"  # timer pour ne pas relancer de suite la charge
                                                
                                                



                      # Augmente la puissance de charge si l'amperage de charge maison est supérieure ou égale à 10 A et que la baterrie est sous les 98%  
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= 10 }}"
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            below: 98  #verifi le % batterie
                          - condition: numeric_state
                            entity_id: sensor.pince_amp_onduleur_power_a
                            below: 9500
                        sequence:
                          - choose:
                              # Si le courant est inférieur à 32A, on l'augmente de 5A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current < 32 }}"
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current + 1 }}"
                                      
                      # Augmente la puissance de charge si  la baterrie est au dessus de 98% 
                      # Et oui quand la baterrie maison est chargée l'amperage ne passe plus dans le positif il faut donc forcer
                      - conditions:
                          - condition: template
                            value_template: "{{ states('sensor.combined_power_pylontech_voltronic') | float >= -3 }}"
                          - condition: numeric_state
                            entity_id: sensor.combined_battery_soc
                            above: 97  #verifi le % batterie
                          - condition: numeric_state
                            entity_id: sensor.pince_amp_onduleur_power_a
                            below: 9500
                        sequence:
                          - choose:
                              # Si le courant est inférieur à 32A, on l'augmente de 5A
                              - conditions:
                                  - condition: template
                                    value_template: "{{ current < 32 }}"
                                sequence:
                                  - service: number.set_value
                                    data:
                                      entity_id: number.chargeurvoiture_set_charge_current
                                      value: "{{ current + 1 }}"


            #---------------fin de la boucle-----------------------------------------------------------------------------------------------

        - conditions:  #coupe la charge solaire si la voiture est branché quand les condition solaire ne sont pas remplis.
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Solar') }}"   #vérifi si le bouton est sur solaire
          sequence:
            - choose:
                # Si la voiture est en charge, on arrête la charge
                - conditions:
                    - condition: state
                      entity_id: sensor.chargeurvoiture_status
                      state: ['Charging', 'plugged_in']   #detecte le status chargin ou plugged_in 
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "start charging"
                    - delay: "00:00:05"
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"


        ###################### Mode "Off" : Arrêt de la charge même si quelqu'un se branche ##################################################################################
        - conditions:
            - condition: template
              value_template: "{{ is_state('input_select.SelecteurChargeurVE', 'Off') }}"
            - condition: template
              value_template: "{{ not is_state('sensor.chargeurvoiture_status', 'available') }}" #si le status est autre que available
          sequence:
            - choose:
                # Si la voiture est en charge, on arrête la charge
                - conditions:
                    - condition: state
                      entity_id: sensor.chargeurvoiture_status
                      state: ['charging', 'plugged_in']   #detecte le status chargin ou plugged_in 
                  sequence:
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Start charging"
                    - delay: "00:00:05"
                    - service: select.select_option
                      data:
                        entity_id: select.chargeurvoiture_toggle_charging
                        option: "Stop charging"

  mode: single  # Empêche l'automatisation de s'exécuter en parallèle
